# Generated by Django 3.2.23 on 2024-01-07 14:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Username')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email')),
                ('id', users.models.UniqueIDField(max_length=9, primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('registered_at', models.DateTimeField(auto_now_add=True, verbose_name='Registered at')),
                ('user_type', models.CharField(blank=True, choices=[('ADMIN', 'Admin'), ('VENDOR', 'Vendor'), ('CUSTOMER', 'Customer')], max_length=100, verbose_name='User Type')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('full_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Full Name')),
                ('roll_no', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('year', models.DateField(blank=True, null=True)),
                ('aadhar_no', models.CharField(blank=True, max_length=16, null=True)),
                ('aadhar_picture', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Aadhar Picture')),
                ('phone_no', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='Phone number')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('is_phone_no_verified', models.BooleanField(default=False, verbose_name='Phone number verified')),
                ('profile_photo', models.ImageField(blank=True, upload_to='user_images', verbose_name='Profile Pic')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female')], max_length=20, null=True, verbose_name='Gender Type')),
                ('reg_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Registration Number')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, max_length=300, null=True)),
                ('pincode', models.CharField(blank=True, max_length=20, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=20, null=True)),
                ('street', models.CharField(blank=True, max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Gallery image')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dish Name')),
                ('price', models.CharField(blank=True, max_length=20, null=True, verbose_name='Price')),
                ('items', models.TextField(blank=True, null=True, verbose_name='Dishes')),
                ('image', models.ImageField(blank=True, default='default/mess_menu.jpg', upload_to='mess_menu_images', verbose_name='Item image')),
                ('category', models.CharField(blank=True, choices=[('LUNCH', 'Lunch'), ('DINNER', 'Dinner'), ('BOTH', 'Both')], max_length=100, verbose_name='Category')),
            ],
        ),
        migrations.CreateModel(
            name='Messowner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mess_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Mess Name')),
                ('about', models.CharField(blank=True, max_length=400, verbose_name='About')),
                ('employees', models.ManyToManyField(blank=True, related_name='mess_workers', to=settings.AUTH_USER_MODEL, verbose_name='Mess Worker')),
                ('mess_customers', models.ManyToManyField(blank=True, related_name='customers', to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vendor')),
            ],
            options={
                'verbose_name': "Vendor's Mess",
                'verbose_name_plural': 'Mess Details',
            },
        ),
        migrations.CreateModel(
            name='Plans',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(blank=True, max_length=100, null=True)),
                ('plan_type', models.CharField(blank=True, choices=[('LUNCH', 'Lunch'), ('DINNER', 'Dinner'), ('BOTH', 'Both')], max_length=100, verbose_name='Plan Type')),
                ('price', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, upload_to='mess_plan_images', verbose_name='Plan image')),
                ('duration', models.IntegerField(blank=True)),
                ('mess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.messowner', verbose_name='Mess Name')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('name', models.CharField(max_length=254, verbose_name='Customer Name')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PENDING', 'Pending'), ('REFUND', 'Refunded')], default='PENDING', max_length=254, verbose_name='Payment Status')),
                ('payment_id', users.models.UniqueIDField(max_length=9, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('payment_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_from', to=settings.AUTH_USER_MODEL)),
                ('payment_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_to', to='users.messowner')),
                ('refund_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refund_from', to='users.messowner')),
                ('refund_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refund_to', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True, verbose_name='Activation Date')),
                ('end_date', models.DateField(blank=True)),
                ('plan_status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired')], max_length=50, verbose_name='Plan Status')),
                ('total_orders', models.IntegerField(default=0, verbose_name='Order Quota')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.plans', verbose_name='Plan')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created_on', models.DateTimeField(auto_created=True, auto_now=True)),
                ('verify_otp', users.models.CreateOtpField(auto_created=True, max_length=4, unique=True)),
                ('order_id', users.models.UniqueIDField(max_length=9, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('DELIVERED', 'Delivered'), ('ORDERED', 'Ordered'), ('INPROCESS', 'In Process'), ('CANCELLED', 'Cancelled'), ('OUTDATED', 'Out Dated')], max_length=50, verbose_name='Order Status')),
                ('sent_by_vendor', models.BooleanField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Customer')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.menu', verbose_name='Order Items')),
                ('mess', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.messowner', verbose_name='Mess')),
                ('order_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.plans', verbose_name='Order Type')),
            ],
        ),
        migrations.AddField(
            model_name='menu',
            name='mess',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.messowner', verbose_name='Mess Name'),
        ),
    ]
